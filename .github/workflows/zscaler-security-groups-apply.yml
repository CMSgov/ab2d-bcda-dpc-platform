name: zscaler-security-groups apply terraform

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/zscaler-security-groups-apply.yml
      - terraform/services/zscaler-security-groups/**
  workflow_dispatch: # Allow manual trigger

jobs:
  terraform-apply:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/services/zscaler-security-groups
    strategy:
      fail-fast: false
      matrix:
        app: [ab2d, bcda, dpc]
        env: [dev, test, sbx, prod]
        include:
          - app: bcda
            env: mgmt
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/setup-tfenv-terraform
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ matrix.app == 'ab2d' && secrets[format('{0}_{1}_ACCOUNT', matrix.app, matrix.env)] || secrets.BCDA_ACCOUNT }}:role/delegatedadmin/developer/${{ matrix.app }}-${{ matrix.env }}-github-actions
          aws-region: ${{ vars.AWS_REGION }}
      - run: terraform init -backend-config=../../backends/${{ matrix.app }}-${{ matrix.env }}.s3.tfbackend
      - run: terraform apply -auto-approve
        env:
          TF_VAR_app: ${{ matrix.app }}
          TF_VAR_env: ${{ matrix.env }}
        uses: slackapi/slack-github-action@v1.26.0
        if: ${{ failure() }}
        with:
          channel-id: 'C04UG13JF9B'
          slack-message: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

