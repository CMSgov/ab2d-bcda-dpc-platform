name: Build Runner EC2 Images

on:
  pull_request:
    paths:
      - .github/workflows/build-runner-images.yml
      - packer/github-actions-runner/**
  schedule:
    # 00:00 on Monday each week
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  build-image:
    name: Build
    runs-on: self-hosted
    defaults:
      run:
        working-directory: packer/github-actions-runner
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.BCDA_MGMT_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        with:
          params: |
            AMI_ACCOUNT=/github-actions-runner-ami/account
            AMI_FILTER=/github-actions-runner-ami/filter

      - name: Retrieve default VPC ID and subnet
        id: vpc
        run: |
          VPC_ID=$(aws ec2 describe-vpcs --filters "Name=tag:Name, Values=bcda-managed-vpc" --query 'Vpcs[].VpcId' --output text)
          echo "VPC_ID=$VPC_ID" >> "$GITHUB_ENV"

          SUBNET_ID=$(aws ec2 describe-subnets \
            --filters \
              "Name=vpc-id,Values=$VPC_ID" \
              "Name=tag:Layer,Values=app" \
            --query 'Subnets[0].SubnetId' \
            --output text)
          echo "SUBNET_ID=$SUBNET_ID" >> "$GITHUB_ENV"

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Run `packer init`
        id: init
        run: packer init .

      - name: Run `packer validate`
        id: validate
        run: |
          packer validate \
            -var ami_account="$AMI_ACCOUNT" \
            -var ami_filter="$AMI_FILTER" \
            -var vpc_id="$VPC_ID" \
            -var subnet_id="$SUBNET_ID" \
            -evaluate-datasources .

      - name: Packer Build
        id: build
        run: |
          PACKER_LOG=1 packer build \
            -var ami_account="$AMI_ACCOUNT" \
            -var ami_filter="$AMI_FILTER" \
            -var vpc_id="$VPC_ID" \
            -var subnet_id="$SUBNET_ID" \
            -color=false -on-error=cleanup .
